[{
    "description": "range without min or max",
    "rule": "range",
    "args": [{}],
    "tests": [{
      "description": "ignores any value",
      "samples": [null, "", "x", 10, -10, 0, 1.7]
    }]
  }, {
    "description": "range with min only",
    "rule": "range",
    "args": [{
      "min": 2
    }],
    "tests": [{
        "description": "ignores nil value",
        "samples": [null]
      },
      {
        "description": "bigger is valid",
        "samples": [2.1, 5, 10, 1000]
      },
      {
        "description": "exact is valid",
        "samples": [2]
      },
      {
        "description": "too small is invalid",
        "samples": [-100, -1.4, 0, 1, 1.99],
        "err": "Required to be greater or equal to 2."
      }
    ]
  }, {
    "description": "range with max only",
    "rule": "range",
    "args": [{
      "max": 2
    }],
    "tests": [{
        "description": "ignores nil value",
        "samples": [null]
      },
      {
        "description": "smaller is valid",
        "samples": [-100, -1.4, 0, 1, 1.99]
      },
      {
        "description": "exact is valid",
        "samples": [2]
      },
      {
        "description": "too big is invalid",
        "samples": [2.1, 5, 10, 1000],
        "err": "Exceeds maximum allowed value of 2."
      }
    ]
  }, {
    "description": "range with min equals max",
    "rule": "range",
    "args": [{
      "min": 2,
      "max": 2
    }],
    "tests": [{
        "description": "ignores nil value",
        "samples": [null]
      },
      {
        "description": "smaller is invalid",
        "samples": [-100, -1.4, 0, 1, 1.99],
        "err": "The value must be exactly 2."
      },
      {
        "description": "exact is valid",
        "samples": [2]
      },
      {
        "description": "too big is invalid",
        "samples": [2.1, 5, 10, 1000],
        "err": "The value must be exactly 2."
      }
    ]
  },
  {
    "description": "range from min to max",
    "rule": "range",
    "args": [{
      "min": 1,
      "max": 2
    }],
    "tests": [{
        "description": "ignores nil value",
        "samples": [null]
      },
      {
        "description": "shorter is invalid",
        "samples": [-1.7, 0, 0.99],
        "err": "The value must fall within the range 1 - 2."
      },
      {
        "description": "fits boundaries is valid",
        "samples": [1, 1.1, 1.99, 2]
      },
      {
        "description": "does not fit boundaries is invalid",
        "samples": [-100, -1, 0, 0.99, 2.01, 10, 100],
        "err": "The value must fall within the range 1 - 2."
      }
    ]
  }, {
    "description": "range with a custom min error message",
    "rule": "range",
    "args": [{
      "min": 2,
      "msg": "Min %d."
    }],
    "tests": [{
      "description": "too small is invalid",
      "samples": [0, 1],
      "err": "Min 2."
    }]
  }, {
    "description": "range with a custom max error message",
    "rule": "range",
    "args": [{
      "max": 2,
      "msg": "Max %d."
    }],
    "tests": [{
      "description": "too big is invalid",
      "samples": [3, 10],
      "err": "Max 2."
    }]
  }, {
    "description": "range with a custom exact error message",
    "rule": "range",
    "args": [{
      "min": 2,
      "max": 2,
      "msg": "Exactly %d."
    }],
    "tests": [{
      "description": "too big or small is invalid",
      "samples": [-10, 0, 1, 3, 5],
      "err": "Exactly 2."
    }]
  }, {
    "description": "range with a custom range characters error message",
    "rule": "range",
    "args": [{
      "min": 1,
      "max": 2,
      "msg": "In range %d - %d."
    }],
    "tests": [{
      "description": "too big or small is invalid",
      "samples": [-1, 0, 3, 10],
      "err": "In range 1 - 2."
    }]
  }
]
